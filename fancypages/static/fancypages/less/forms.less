// Set font for forms
#block_input_wrapper {
    label,
    input,
    button,
    select,
    textarea {
      #font > .shorthand(@baseFontSize,normal,@baseLineHeight); // Set size, weight, line-height here
    }
    input,
    button,
    select,
    textarea {
      font-family: @baseFontFamily; // And only set font-family here for those that need it (note the missing label element)
    }

    // Identify controls by their labels
    label {
      display: block;
      margin-bottom: 5px;
    }

    // Form controls
    // -------------------------

    // Shared size and type resets
    select,
    textarea,
    input[type="text"],
    input[type="password"],
    input[type="datetime"],
    input[type="datetime-local"],
    input[type="date"],
    input[type="month"],
    input[type="time"],
    input[type="week"],
    input[type="number"],
    input[type="email"],
    input[type="url"],
    input[type="search"],
    input[type="tel"],
    input[type="color"],
    .uneditable-input {
      display: inline-block;
      height: @baseLineHeight;
      min-height: auto;
      padding: 4px 6px;
      margin-bottom: @baseLineHeight / 2;
      font-size: @baseFontSize;
      line-height: @baseLineHeight;
      color: @gray;
      .border-radius(@inputBorderRadius);
      vertical-align: middle;
      .box-sizing(content-box);
    }

    // Reset appearance properties for textual inputs and textarea
    // Declare width for legacy (can't be on input[type=*] selectors or it's too specific)
    input,
    textarea,
    .uneditable-input {
      width: 258px; // plus 12px padding and 2px border
    }
    // Reset height since textareas have rows
    textarea {
      height: auto;
    }
    // Everything else
    textarea,
    input[type="text"],
    input[type="password"],
    input[type="datetime"],
    input[type="datetime-local"],
    input[type="date"],
    input[type="month"],
    input[type="time"],
    input[type="week"],
    input[type="number"],
    input[type="email"],
    input[type="url"],
    input[type="search"],
    input[type="tel"],
    input[type="color"],
    .uneditable-input {
      background-color: @inputBackground;
      border: 1px solid @inputBorder;
      .box-shadow(inset 0 1px 1px rgba(0,0,0,.075));
      .transition(~"border linear .2s, box-shadow linear .2s");

      // Focus state
      &:focus {
        border-color: rgba(82,168,236,.8);
        outline: 0;
        outline: thin dotted \9; /* IE6-9 */
        .box-shadow(~"inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(82,168,236,.6)");
      }
    }

    // Position radios and checkboxes better
    input[type="radio"],
    input[type="checkbox"] {
      margin: 4px 0 0;
      *margin-top: 0; /* IE7 */
      margin-top: 1px \9; /* IE8-9 */
      line-height: normal;
    }

    // Reset width of input images, buttons, radios, checkboxes
    input[type="file"],
    input[type="image"],
    input[type="submit"],
    input[type="reset"],
    input[type="button"],
    input[type="radio"],
    input[type="checkbox"] {
      width: auto; // Override of generic input selector
    }

    // Set the height of select and file controls to match text inputs
    select,
    input[type="file"] {
      height: @inputHeight; /* In IE7, the height of the select element cannot be changed by height, only font-size */
      *margin-top: 4px; /* For IE7, add top margin to align select with labels */
      line-height: @inputHeight;
    }

    // Make select elements obey height by applying a border
    select {
      width: 220px; // default input width + 10px of padding that doesn't get applied
      border: 1px solid @inputBorder;
      background-color: @inputBackground; // Chrome on Linux and Mobile Safari need background-color
    }

    // Make multiple select elements height not fixed
    select[multiple],
    select[size] {
      height: auto;
    }

    // Focus for select, file, radio, and checkbox
    select:focus,
    input[type="file"]:focus,
    input[type="radio"]:focus,
    input[type="checkbox"]:focus {
      .tab-focus();
    }

    // CHECKBOXES & RADIOS
    // -------------------

    // Indent the labels to position radios/checkboxes as hanging
    .radio,
    .checkbox {
      min-height: @baseLineHeight; // clear the floating input if there is no label text
      padding-left: 20px;
    }
    .radio input[type="radio"],
    .checkbox input[type="checkbox"] {
      float: left;
      margin-left: -20px;
    }

    // Move the options list down to align with labels
    .controls > .radio:first-child,
    .controls > .checkbox:first-child {
      padding-top: 5px; // has to be padding because margin collaspes
    }

    // Radios and checkboxes on same line
    // TODO v3: Convert .inline to .control-inline
    .radio.inline,
    .checkbox.inline {
      display: inline-block;
      padding-top: 5px;
      margin-bottom: 0;
      vertical-align: middle;
    }
    .radio.inline + .radio.inline,
    .checkbox.inline + .checkbox.inline {
      margin-left: 10px; // space out consecutive inline controls
    }

    // INPUT GROUPS
    // ------------

    // Allow us to put symbols and text within the input field for a cleaner look
    .input-append {
      display: inline-block;
      margin-bottom: @baseLineHeight / 2;
      vertical-align: middle;
      font-size: 0; // white space collapse hack
      white-space: nowrap; // Prevent span and input from separating

      // Reset the white space collapse hack
      input,
      select {
        font-size: @baseFontSize;
      }

      input,
      select {
        position: relative; // placed here by default so that on :focus we can place the input above the .add-on for full border and box-shadow goodness
        margin-bottom: 0; // prevent bottom margin from screwing up alignment in stacked forms
        *margin-left: 0;
        vertical-align: top;
        width:218px;
        .border-radius(0 @inputBorderRadius @inputBorderRadius 0);
        // Make input on top when focused so blue border and shadow always show
        &:focus {
          z-index: 2;
        }
      }

      .fp-btn {
        vertical-align: top;
        .border-radius(0);
      }
    }


    .input-append {
      input,
      select {
        .border-radius(@inputBorderRadius 0 0 @inputBorderRadius);
        + .fp-btn-group .btn:last-child {
          .border-radius(0 @inputBorderRadius @inputBorderRadius 0);
        }
      }
      .fp-btn {
        margin-left: -1px;
      }
      .fp-btn:last-child {
        .border-radius(0 @inputBorderRadius @inputBorderRadius 0);
      }
    }
}
